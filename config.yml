version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/MY_APP
    docker:
      - image: circleci/ruby:2.4.1-node
        environment:
          RAILS_ENV: test
      - image: library/mysql:5.7.17
        env:
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_HOST=%
    steps:
      - checkout

      # Restore bundle cache
      - type: cache-restore
        key: MY_APP-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        key: MY_APP-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # secrets.yml for testing
      - run: mv config/secrets.ci.yml config/secrets.yml

      # database.yml for testing
      - run: mv config/database.ci.yml config/database.yml

      # use dockerize for waiting mysql container to be ready
      - run:
          name: Wait for Mysql
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run tests
      - type: shell
        command: |
          bundle exec rails test

      - run: bundle exec rubocop
